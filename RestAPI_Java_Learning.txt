API:

If UI is in angular or tagged to another UI like yellowpages, tripadvisor etc, then, UI cannot render data from backend code where data is sent accessed with database.

UI(java) -> Backend code (java) -> database (api is not needed)
UI(angular) -> Backend code (java) -> database (api is required to get data from angular, to convert user input details to json or xml format and send to backend code)
UI of tripadvisor(java or any) -> Backend code of vythiri -> database (api is needed since, tripadvisor is another company which shouldn't or can't access backend code of vythiri.

HTTP methods:

GET - get data from backend (Retrieve R)
POST - create new registration, new details to database (create C)
PUT- update existing details (Update U)
DELETE - delete any data already present (Delete D)

CRUD operations in short.

Resource or collection -> this determines which type of api to access in endpoint/baseurl
for eg:
google.com/maps -> google.com is baseurl and maps is a resource or collection Both baseurl and maps together is called endpoint. Baseurl is where server the server is located.
google.com/images -> google.com is baseurl and images is a resource

Path Parameter:
https://www.google.com/maps/111234 -> google.com is baseurl and maps is a resource or collectionor
collection, 111234 is a path parameter or ID or subresource, requesting api with response for parameter only 111234.

https://www.amazon.com/orders?sort_ by=20/12/2020  -> here date is not a sub resource, it is not drilling into orders, its just fetching the existing order by filtering. ? is query parameter.

Syntax for end point: baseurl/resource/(queryorpath) parameter

Header and cookies -> give additional details to api from UI.

To start testing api below "API Contract" should be provided by dev team:

BaseURl
Resource
Query
Http Method (POST OR DELETE OR PUT OR GET)
Sample Body

POST:
Key value is required in most of the APIs. few may not. It will be all updated in API Contract given by dev team.
give Params (Key and value - key, qaclick123) and give the body. when sent, details will be saved in database generating a place_id. It is unique for each record in database. Hence, other operations like GET, PUT, DELETE can be performed using place_id.

GET
give Params (Key and value - key, qaclick 123) and place_id and use GET API.

PUT:
in body, select raw and text as json
{
"place_id":"60bc31104f80eeca306516fde3460f43",
"address":"msnhighwa1y, USA",
"key":"qaclick123"
}

now if you see using GET request with place_id and key param, updated address will be displayed.
Note that in PUT request, it is enough if json has place_id and key.  Params update is not required.
It is all based on developers how they provide API contract. It varies for each API and developer.

DELETE:
give key param qaclick123 as always.
{
    "place_id":"60bc31104f80eeca306516fde3460f43"
}

Note: GET and POST are the http methods used usually. POST can take care of both update and delete if that respective api is used. 

